{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Tp3-Extra","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyN5pJZwIcRp2LNzK+VK+Leq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Keras"],"metadata":{"id":"YtFznJKcJd1h"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"A08LqGNjJa61"},"outputs":[],"source":["import pandas as pd\n","import sys\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import roc_auc_score\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.preprocessing import OrdinalEncoder\n","from sklearn import preprocessing\n","import numpy as np\n","from sklearn.model_selection import RandomizedSearchCV\n","from scipy.stats import randint as sp_randInt\n","from scipy.stats import loguniform\n","\n","algo = pd.read_parquet('/content/drive/MyDrive/Colab Notebooks/train')\n","algo.sort_values('timedelta',ascending=False, inplace=True)#ordeno por las dudas de mas antiguo a mas reciente, despues lo tiro es solo por las dudas para cuando haga el split\n","\n","X = algo[[ 'n_tokens_title', 'n_tokens_content',\\\n","       'n_unique_tokens', 'n_non_stop_words', 'n_non_stop_unique_tokens',\\\n","       'num_hrefs', 'num_self_hrefs', 'num_imgs', 'num_videos',\\\n","       'average_token_length', 'num_keywords', 'data_channel_is_lifestyle',\\\n","       'data_channel_is_entertainment', 'data_channel_is_bus',\\\n","       'data_channel_is_socmed', 'data_channel_is_tech',\\\n","       'data_channel_is_world', 'kw_min_min', 'kw_max_min', 'kw_avg_min',\\\n","       'kw_min_max', 'kw_max_max', 'kw_avg_max', 'kw_min_avg', 'kw_max_avg',\\\n","       'kw_avg_avg', 'self_reference_min_shares', 'self_reference_max_shares',\\\n","       'self_reference_avg_sharess', 'weekday_is_monday', 'weekday_is_tuesday',\\\n","       'weekday_is_wednesday', 'weekday_is_thursday', 'weekday_is_friday',\\\n","       'weekday_is_saturday', 'weekday_is_sunday', 'is_weekend', 'LDA_00',\\\n","       'LDA_01', 'LDA_02', 'LDA_03', 'LDA_04', 'global_subjectivity',\\\n","       'global_sentiment_polarity', 'global_rate_positive_words',\\\n","       'global_rate_negative_words', 'rate_positive_words',\\\n","       'rate_negative_words', 'avg_positive_polarity', 'min_positive_polarity',\\\n","       'max_positive_polarity', 'avg_negative_polarity',\\\n","       'min_negative_polarity', 'max_negative_polarity', 'title_subjectivity',\\\n","       'title_sentiment_polarity', 'abs_title_subjectivity',\\\n","       'abs_title_sentiment_polarity']]\n","\n","Y = algo['popular']"]},{"cell_type":"code","source":["# ver de usar un simpleImputer\n","#si el dato es nan lo lleno con 0 asumo que on lo llenaron porque no tenia nada\n","X['n_tokens_title'].fillna(value = 0.0, inplace =True)\n","X['n_tokens_content'].fillna(value = 0.0, inplace =True)\n","X['n_unique_tokens'].fillna(value = 0.0, inplace =True)\n","X['n_non_stop_words'].fillna(value = 0.0, inplace =True)\n","X['n_non_stop_unique_tokens'].fillna(value = 0.0, inplace =True)\n","X['num_self_hrefs'].fillna(value = 0.0, inplace =True)\n","X['num_hrefs'].fillna(value = 0.0, inplace =True)\n","X['num_imgs'].fillna(value = 0.0, inplace =True)\n","X['num_videos'].fillna(value = 0.0, inplace =True)\n","X['num_keywords'].fillna(value = 0.0, inplace =True)\n","X['data_channel_is_bus'].fillna(value = 0.0, inplace =True)\n","X['data_channel_is_socmed'].fillna(value = 0.0, inplace =True)\n","X['data_channel_is_tech'].fillna(value = 0.0, inplace =True)\n","X['kw_min_min'].fillna(value = 0.0, inplace =True)\n","X['self_reference_avg_sharess'].fillna(value = 0.0, inplace =True)\n","X['kw_max_max'].fillna(value = 0.0, inplace =True)\n","X['kw_avg_min'].fillna(value = 0.0, inplace =True)\n","X['kw_min_avg'].fillna(value = 0.0, inplace =True)\n","X['weekday_is_monday'].fillna(value = 0.0, inplace =True)\n","X['kw_max_min'].fillna(value = 0.0, inplace =True)\n","X['kw_min_max'].fillna(value = 0.0, inplace =True)\n","X['weekday_is_tuesday'].fillna(value = 0.0, inplace =True)\n","X['weekday_is_wednesday'].fillna(value = 0.0, inplace =True)\n","X['weekday_is_thursday'].fillna(value = 0.0, inplace =True)\n","X['weekday_is_friday'].fillna(value = 0.0, inplace =True)\n","X['weekday_is_saturday'].fillna(value = 0.0, inplace =True)\n","X['LDA_00'].fillna(value = 0.0, inplace =True)\n","X['LDA_01'].fillna(value = 0.0, inplace =True)\n","X['LDA_02'].fillna(value = 0.0, inplace =True)\n","X['LDA_03'].fillna(value = 0.0, inplace =True)\n","X['global_sentiment_polarity'].fillna(value = 0.0, inplace =True)\n","X['global_rate_positive_words'].fillna(value = 0.0, inplace =True)\n","X['global_rate_negative_words'].fillna(value = 0.0, inplace =True)\n","X['rate_positive_words'].fillna(value = 0.0, inplace =True)\n","X['rate_negative_words'].fillna(value = 0.0, inplace =True)\n","X['avg_positive_polarity'].fillna(value = 0.0, inplace =True)\n","X['max_positive_polarity'].fillna(value = 0.0, inplace =True)\n","X['avg_negative_polarity'].fillna(value = 0.0, inplace =True)\n","X['min_negative_polarity'].fillna(value = 0.0, inplace =True)\n","X['max_negative_polarity'].fillna(value = 0.0, inplace =True)\n","X['title_subjectivity'].fillna(value = 0.0, inplace =True)\n","X['abs_title_subjectivity'].fillna(value = 0.0, inplace =True)\n","X['abs_title_sentiment_polarity'].fillna(value = 0.0, inplace =True)"],"metadata":{"id":"5UnXlY3XMmfN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_valid, y_train, y_valid = train_test_split(X, Y, test_size=0.4, random_state=42)"],"metadata":{"id":"r6B7YqdQNBAq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"CEg5N_RMNXZ6"},"execution_count":null,"outputs":[]}]}